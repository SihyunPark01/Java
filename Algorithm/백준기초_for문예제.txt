* for문 연습 *
 
2739 구구단
N을 입력받은 뒤, 구구단 N단을 출력하는 프로그램을 작성하시오. 
첫째 줄에 N이 주어진다. N은 1보다 크거나 같고, 9보다 작거나 같다.
출력형식과 같게 N*1부터 N*9까지 출력한다.

N = int(input())
for i in range(1,10):
    print(N, "*", i, "=", N*i) #파이썬은 +가 아니라 ,로 구분
-----------------------------------------------------------------------------------------------------------------

10950 A+B-3
두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.
첫째 줄에 테스트 케이스의 개수 T가 주어진다.
각 테스트 케이스는 한 줄로 이루어져 있으며, 각 줄에 A와 B가 주어진다. (0 < A, B < 10)
각 테스트 케이스마다 A+B를 출력한다.

t = int(input())
for i in range(t):
    a,b = map(int, input().split())    
    print(a+b)
-----------------------------------------------------------------------------------------------------------------

8393 합
n이 주어졌을 때, 1부터 n까지 합을 구하는 프로그램을 작성하시오.

n = int(input())
sum = 0
for i in range(n+1):
    sum += i
print(sum)
-------------------------------------------------------------------------------------------------------------------

15552 빠른 A+B
본격적으로 for문 문제를 풀기 전에 주의해야 할 점이 있다. 입출력 방식이 느리면 여러 줄을 입력받거나 출력할 때 시간초과가 날 수 있다는 점이다.
Java를 사용하고 있다면, Scanner와 System.out.println 대신 BufferedReader와 BufferedWriter를 사용할 수 있다. BufferedWriter.flush는 맨 마지막에 한 번만 하면 된다.
Python을 사용하고 있다면, input 대신 sys.stdin.readline을 사용할 수 있다. 단, 이때는 맨 끝의 개행문자까지 같이 입력받기 때문에 문자열을 저장하고 싶을 경우 .rstrip()을 추가로 해 주는 것이 좋다.
또한 입력과 출력 스트림은 별개이므로, 테스트케이스를 전부 입력받아서 저장한 뒤 전부 출력할 필요는 없다. 테스트케이스를 하나 받은 뒤 하나 출력해도 된다.
자세한 설명 및 다른 언어의 경우는 이 글에 설명되어 있다.
첫 줄에 테스트케이스의 개수 T가 주어진다. T는 최대 1,000,000이다. 다음 T줄에는 각각 두 정수 A와 B가 주어진다. A와 B는 1 이상, 1,000 이하이다.
각 테스트케이스마다 A+B를 한 줄에 하나씩 순서대로 출력한다.

import sys

t = int(input())
for i in range(t):
    a,b = map(int, sys.stdin.readline().split()) #input대신 sys.stdin.readline()써주면 됨
    print(a+b)
----------------------------------------------------------------------------------------------------------------------

2741 N찍기
자연수 N이 주어졌을 때, 1부터 N까지 한 줄에 하나씩 출력하는 프로그램을 작성하시오.
첫째 줄부터 N번째 줄 까지 차례대로 출력한다.

N = int(input())
for i in range(1, N+1):
    print(i)
----------------------------------------------------------------------------------------------------------------------

2742 기찍N
자연수 N이 주어졌을 때, N부터 1까지 한 줄에 하나씩 출력하는 프로그램을 작성하시오.

N = int(input())
for i in range(N):
    print(N-i)
----------------------------------------------------------------------------------------------------------------------

11021 A+B-7
두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.
첫째 줄에 테스트 케이스의 개수 T가 주어진다.
각 테스트 케이스는 한 줄로 이루어져 있으며, 각 줄에 A와 B가 주어진다. (0 < A, B < 10)
각 테스트 케이스마다 "Case #x: "를 출력한 다음, A+B를 출력한다. 테스트 케이스 번호는 1부터 시작한다.
Case #1: 2
Case #2: 5
Case #3: 7
Case #4: 17
Case #5: 7

T = int(input())
for i in range(1, T+1): #1부터 T까지!
    a, b = map(int, input().split())
    print(f'Case #{i}: {a+b}')
-----------------------------------------------------------------------------------------------------------------------

11022 A+B-8
Case #1: 1 + 1 = 2
Case #2: 2 + 3 = 5
Case #3: 3 + 4 = 7
Case #4: 9 + 8 = 17
Case #5: 5 + 2 = 7
위의 문제를 이렇게 출력해봐

t = int(input())

for i in range(1, t+1):
    a, b = map(int, input().split())
    print("Case", "#"+str(i)+":", a, "+", b, "=", a+b)
------------------------------------------------------------------------------------------------------------------------

2438 별 찍기 -1
*
**
***
****
*****

n = int(input())
for i in range(1, n+1):
    print("*"*i)
-------------------------------------------------------------------------------------------------------------------------

2439 별 찍기 -2
     *
    **
   ***
  ****
 *****

n = int(input())
for i in range(1, n+1):
    print(" "*(n-i)+"*"*i)
--------------------------------------------------------------------------------------------------------------------------

10871 X보다 작은 수
정수 N개로 이루어진 수열 A와 정수 X가 주어진다. 이때, A에서 X보다 작은 수를 모두 출력하는 프로그램을 작성하시오.
첫째 줄에 N과 X가 주어진다. (1 ≤ N, X ≤ 10,000)
둘째 줄에 수열 A를 이루는 정수 N개가 주어진다. 주어지는 정수는 모두 1보다 크거나 같고, 10,000보다 작거나 같은 정수이다.	
X보다 작은 수를 입력받은 순서대로 공백으로 구분해 출력한다. X보다 작은 수는 적어도 하나 존재한다.

N, X = map(int, input().split())
A = list(map(int, input().split()))
for i in range(N):
    if A[i] < X:
        print(A[i])
-----------------------------------------------------------------------------------------------------------------------------




