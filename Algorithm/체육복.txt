2. [프로그래머스] 체육복
< 문제 >

점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다.

학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다.

전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.

< 제한사항 >

전체 학생의 수는 2명 이상 30명 이하입니다.

체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.

여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.

여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.

여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.

< 문제풀이 >

Greedy Algorithms(탐욕법, 탐욕 알고리즘) 문제 ➡ 미리 정한 기준에 따라서 매번 가장 좋아보이는 답을 선택하는 알고리즘

순차적으로 배열을 비교할 수 있게 정렬한다. 여벌 체육복을 가져온 학생이 도난당한 경우, 체육복을 빌려줄 수 없기 때문에 reserve배열에서 제외시켜준다. reserve[j]의 값을 -1로 변경 lost[i] 의 값도 -1로 변경해 도난당한 대상에서 제외시켜준다. 여벌 체육복을 가져온 학생이 자기번호의 앞,뒤 학생에게 체육복을 빌려준다. lost[i]-1 == reserve[j] 또는 lost[i]+1 == reserve[j] reserve[j]의 값을 -1로 변경 lost[] 와 reserve[] 배열의 요소값을 0 이 아닌 -1로 변경해주는 이유는 0으로 변경했을 경우 lost[i]+1 의 값이 1 이 되므로 if문을 타게 될 가능성이 있다. < 자바코드 > import java.util.Arrays; class Solution { public int solution(int n, int[] lost, int[] reserve) { int answer = n - lost.length;

Arrays.sort(lost);
Arrays.sort(reserve);

// 여벌 체육복을 가져온 학생이 도난당한 경우
for(int i=0; i<lost.length; i++){
    for(int j=0; j<reserve.length; j++){
        if(lost[i] == reserve[j]){
            answer++;
            lost[i] = -1;
            reserve[j] = -1; 
            break; 
        }
    }
}
// 도난당한 학생에게 체육복 빌려주는 경우
for(int i=0; i<lost.length; i++){
    for(int j=0; j<reserve.length; j++){
        if((lost[i]-1 == reserve[j]) || (lost[i]+1 == reserve[j])){
            answer++;
            reserve[j] = -1; 
            break; 
        }
    }
}
return answer;
} }